pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID = '600627339676'
        REGION = 'ap-south-1'
        EC2_HOST = '13.201.99.74'
        EC2_USER = 'root' 
        EC2_PATH = '/home/ec2-user' 
        DOCKER_IMAGE = 'shopaxis-productservice' 
        IMAGE_TAG = 'latest'
        IMAGE_TAR = "${DOCKER_IMAGE}_${IMAGE_TAG}.tar"
        SCP_KEY_PATH = "C:/productservice3key" // Path to                your private SSH key
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'dev', url: 'https://github.com/KunalShirsat/ShopAxis.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    // Build the project using Maven (Windows batch)
                    dir('productservice/ProductService') {
                        bat 'mvn clean package -DskipTests'
                    }
                }
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    // Build Docker image locally
                    dir('productservice/ProductService') {
                        dockerImage = docker.build("${DOCKER_IMAGE}:${IMAGE_TAG}")
                    }
                }
            }
        }
        stage('Save Docker Image as TAR') {
            steps {
                script {
                    // Save the Docker image as a tar file
                    bat """
                    docker save -o ${WORKSPACE}/${IMAGE_TAR} ${DOCKER_IMAGE}:${IMAGE_TAG}
                    """
                }
            }
        }
        stage('Deploy to EC2') {
            steps {
                script {
                    // Copy the saved Docker image tarball to EC2 instance using SCP
                    bat """
                    scp -i ${SCP_KEY_PATH} ${WORKSPACE}\\${IMAGE_TAR} ${EC2_USER}@${EC2_HOST}:${EC2_PATH}
                    """
                    
                    // SSH into EC2, load the Docker image, and start the container
                    bat """
                    ssh -i ${SCP_KEY_PATH} ${EC2_USER}@${EC2_HOST} "docker load -i ${EC2_PATH}/${IMAGE_TAR} && docker-compose -f ${EC2_PATH}/docker-compose.yml up -d"
                    """
                }
            }
        }
    }
    post {
        always {
            cleanWs()  // Clean workspace after execution
        }
    }
}
