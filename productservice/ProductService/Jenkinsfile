pipeline {
    agent any
    environment {
        registry = "public.ecr.aws/m0f0s7t1/my-cid-repo"
    }

    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/dev']], userRemoteConfigs: [[url: 'https://github.com/KunalShirsat/ShopAxis.git']]])
            }
        }

        stage('Build') {
            steps {
                script {
                    dir('productservice/ProductService') {
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    dockerImage = docker.build("${registry}:latest", ".")
                }
            }
        }

        stage('Pushing to ECR') {
            steps {
                script {
                    sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws'
                    sh "docker push ${registry}:latest"
                }
            }
        }

        stage('Stop previous containers') {
            steps {
                sh 'docker stop myjavaContainer || true'
                sh 'docker rm myjavaContainer || true'
            }
        }

        stage('Docker Run') {
            steps {
                sh "docker run -d -p 8081:8081 --name myjavaContainer ${registry}:latest"
            }
        }
    }
}
