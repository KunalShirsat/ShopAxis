pipeline {
    agent any
    environment {
        registry = "6006-2733-9676.dkr.ecr.ap-south-1.amazonaws.com/my-cid-repo"
    }

    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/dev']], userRemoteConfigs: [[url: 'https://github.com/KunalShirsat/ShopAxis.git']]])
            }
        }

        stage('Build') {
            steps {
                script {
                    dir('productservice/ProductService') {
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }


       

        // Uploading Docker images into AWS ECR
       stage('Pushing to ECR') {
            steps{  
                script {
                    sh 'aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y5o9i8r6'
					sh 'docker build -t public.ecr.aws/y5o9i8r6/my-cid-repo:latest .'
					sh 'docker push public.ecr.aws/y5o9i8r6/my-cid-repo:latest'
                }
            }
        }

        // Stopping Docker containers for cleaner Docker run
        stage('Stop previous containers') {
            steps {
                sh 'docker stop myjavaContainer || true'
                sh 'docker rm myjavaContainer || true'
            }
        }

        // Running Docker container
        stage('Docker Run') {
            steps {
                sh 'docker run -d -p 8081:8081 --name myjavaContainer public.ecr.aws/y5o9i8r6/my-cid-repo:latest'
            }
        }
    }
}
